// '...' 有单引号为字面值，否则为标识符
// [...] 可选
// { ... | ... } 必填的单选参数
// ["..."] 数组（方括号在 JSON 字符串外部）
//
//
// 草案完成后可以缩写标识符以节省数据流量

[
  //User
  {
    "RegisterByKey": {
      "params": [
        "userId",
        "publicKey"
      ],
      "returns": [ "code" ]
    },

    "RegisterByPwd": {
      "params": [
        "userId",
        "publicKey",
        "passwordHash",
        "salt1",
        "salt2",
        "IV",
        "prvKey"
      ],
      "returns": [ "code" ]
    },

    "GetLoginInfo": {
      "params": [
        "userId"
      ],
      "returns": [
        "code",
        "authType: { 'password' | 'privateKey' }" // 不是必须的，少暴露一些信息（例如有效的用户名）可以防止社工
        //-- 通过Search还是可以查到的，
      ]
    },

    "Login": {
      "params": [
        "userId",
        "{ privateKey | passwordHash }"
      ],
      "returns": [ "code" ]
    },

    "GetInfo": {
      "params": [
        "userId"
      ],
      "returns": [
        "code",
        "name",
        "publicKey"
      ]
    },

    "SetSecretKey": {
      "params": [
        "code",
        "pubKey",
        "[ prvKeyEnc ]" // If auth by password, send the privateKey encrypted with password? to the TMCS server.
      ]
    },

    // 密钥等安全信息也用这个 API 来改吗？
    //-- NO 用上面那个SetSecretKey
    "SetInfo": {
      "params": [
        "code",
        "userId",
        [ "key: value" ]
      ],
      "returns": []
    }
  },

  //TMCS
  {
    "GetFriendList": {
      "params": [],
      "returns": [
        "code",
        [ "userId" ]
      ]
    },

    "AddFriend": {
      "params": [ "userId" ],
      "returns": []
    },

    "SearchUsers": {
      "params": [ "name" ],
      "returns": [
        "code",
        [ "userId" ]
      ]
    },

    // Pull roaming messages from TMCS server
    "PullMessages": {
      "params": [ "userId", "timestamp", "count" ],
      "returns": [
        "code",
        [ "timestamp", "message" ]
      ]
    },

    "SendMessage": {
      "params": [
        "userId",
        //"relativeTime",
        "message"
      ],
      "returns": ["code"]
    },

    "“SetUnreadTime”": {
      "params": [ "time" ],
      "returns": ["code"]
    },

    //"PushMessages": {
    //  "params": {
    //    "name": "messages",
    //    "type": "array",
    //    "item": [ "senderuserId", "timestamp", "messageText" ]
    //  }
    //},

    //TODO
    "DeleteFriend": {
      "params": [
        "userId"
      ],
      "returns": ["code"]
    }
  }
]
