私钥验证

	注册

	C	生成 用户名
			 RSA 公钥
			 RSA 私钥
		提交 用户名
			 RSA 公钥
	
	S	检测 用户名可用性
		生成 用户初始数据
		存储 用户名
			 RSA 公钥
			 用户初始数据
		返回 结果
	
	
	登录
	
	C	提交 用户名
	
	S	生成 随机字符串
			 密文 = RSAEncrypt(随机字符串, 用户名对应公钥) // 随机字符串长度为可使用的最大值, 根据不同的填充算法, 可能为 key_size / 8 或 key_size / 8 - 11
		返回 登录验证类型
			 密文
	
	C	生成 解密后明文 = RSADecrypt(密文, 自己私钥)
		提交 用户名
			 解密后明文
	
	S	验证 随机字符串 == 解密后明文
		返回 结果

	重置RSA密钥对

	C	生成 RSA公钥
			 RSA私钥
		提交 RSA公钥

	S	替换 RSA公钥
		删除 所有消息记录
		返回 结果


密码验证

	注册

	C	生成 用户名
			 RSA公钥
			 RSA私钥
			 密码
			 Salt1
			 Salt2
			 Hash = SHA_512(密码 + Salt1)
			 对称密钥 = SHA_512(密码 + Salt2)
			 IV
			 加密私钥 = AESEncrypt(私钥, 对称密钥, IV)
		提交 用户名
			 Hash
			 Salt1
			 Salt2
			 IV
			 公钥
			 加密私钥
	
	S	检测 用户名可用性
		生成
	
	登录
	
	C	提交 用户名
	
	S	提交 Salt1
			 登录验证类型
	  *	提交 SaltTmp
	
	C *	生成 Hash = SHA_512(SHA_512(密码 + Salt1) + SaltTmp)
		提交 Hash
	
	S	验证 Hash
		提交 Salt2
			 IV
			 加密私钥
	
	C	还原 对称密钥 = SHA_512(密码 + Salt2)
			 私钥 = AESDecrypt(加密私钥, 对称密钥, IV)

发送消息

C	生成 密文 = RSAEncrypt(原文, 对方公钥)
	提交 密文

S	存储 密文
	向消息接收者推送 (如果在线)